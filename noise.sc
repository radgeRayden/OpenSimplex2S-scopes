# Ported from OpenSimplex2S.cs, https://github.com/KdotJPG/OpenSimplex2
# Comments are included verbatim. Original code is public domain (Unlicense).

using import struct
using import Array

let PSIZE = 2048
let PMASK = 2047

# normalization constants
let N2 = 0.05481866495625118:f64
let N3 = 0.2781926117527186:f64
let N4 = 0.11127401889945551:f64

struct LatticePoint2D plain
    xsv : i32
    ysv : i32
    dx : f64
    dy : f64

    inline... __typecall (cls)
        super-type.__typecall cls
    case (cls xsv ysv)
        ssv := ((xsv + ysv) as f64) * -0.211324865405187:f64
        super-type.__typecall cls
            xsv = xsv
            ysv = ysv
            dx = ((-xsv as f64) - ssv)
            dy = ((-ysv as f64) - ssv)

struct LatticePoint3D plain
    dxr : f64
    dyr : f64
    dzr : f64
    xrv : i32
    yrv : i32
    zrv : i32
    next-on-failure : usize
    next-on-success : usize

    inline... __typecall (cls)
        super-type.__typecall cls
    case (cls xrv yrv zrv lattice)
        super-type.__typecall cls
            dxr = ((-xrv as f64) + lattice * 0.5:f64)
            dyr = ((-yrv as f64) + lattice * 0.5:f64)
            dzr = ((-zrv as f64) + lattice * 0.5:f64)
            xrv = (xrv + lattice * 1024)
            yrv = (yrv + lattice * 1024)
            zrv = (zrv + lattice * 1024)

struct LatticePoint4D plain
    xsv : i32
    ysv : i32
    zsv : i32
    wsv : i32
    dx : f64
    dy : f64
    dz : f64
    dw : f64
    inline... __typecall (cls)
        super-type.__typecall cls
    case (cls xsv ysv zsv wsv)
        ssv := ((+ xsv ysv zsv wsv) as f64) * -0.138196601125011:f64
        super-type.__typecall cls
            xsv = xsv
            ysv = ysv
            zsv = zsv
            wsv = wsv
            dx = ((-xsv as f64) - ssv)
            dy = ((-ysv as f64) - ssv)
            dz = ((-zsv as f64) - ssv)
            dw = ((-wsv as f64) - ssv)

struct Grad2 plain
    dx : f64
    dy : f64

struct Grad3 plain
    dx : f64
    dy : f64
    dz : f64

struct Grad4 plain
    dx : f64
    dy : f64
    dz : f64
    dw : f64

local LOOKUP_2D : (array LatticePoint2D (8 * 4))
for i in (range 8)
    let i1 j1 i2 j2 =
        if ((i & 1) == 0)
            let i1 j1 =
                if ((i & 2) == 0) (_ -1 0) 
                else (_ 1 0)
            let i2 j2 =
                if ((i & 4) == 0) (_ 0 -1) 
                else (_ 0 1)
            _ i1 j1 i2 j2
        else
            let i1 j1 =
                if ((i & 2) != 0) (_ 2 1) 
                else (_ 0 1)
            let i2 j2 =
                if ((i & 4) != 0) (_ 1 2) 
                else (_ 1 0)
            _ i1 j1 i2 j2

    LOOKUP_2D @ (i * 4 + 0) = (typeinit 0 0)
    LOOKUP_2D @ (i * 4 + 1) = (typeinit 1 1)
    LOOKUP_2D @ (i * 4 + 2) = (typeinit i1 j1)
    LOOKUP_2D @ (i * 4 + 3) = (typeinit i2 j2)

local LOOKUP_3D : (array (array LatticePoint3D (0x0D + 1)) 8)
for i in (range 8)
    let i1 j1 k1 =
        (i >> 0) & 1
        (i >> 1) & 1
        (i >> 2) & 1

    let i2 j2 k2 =
        i1 ^ 1
        j1 ^ 1
        k1 ^ 1

    c :=  LOOKUP_3D @ i

    # The two points within this octant, one from each of the two cubic half-lattices.
    c @ 0x0 = (LatticePoint3D i1 j1 k1 0)
    c @ 0x1 = (LatticePoint3D (i1 + i2) (j1 + j2) (k1 + k2) 1)

    # (1, 0, 0) vs (0, 1, 1) away from octant.
    c @ 0x2 = (LatticePoint3D (i1 ^ 1) j1 k1 0)
    c @ 0x3 = (LatticePoint3D i1 (j1 ^ 1) (k1 ^ 1) 0)

    # (1, 0, 0) vs (0, 1, 1) away from octant, on second half-lattice.
    c @ 0x4 = (LatticePoint3D (i1 + (i2 ^ 1)) (j1 + j2) (k1 + k2) 1)
    c @ 0x5 = (LatticePoint3D (i1 + i2) (j1 + (j2 ^ 1)) (k1 + (k2 ^ 1)) 1)

    # (0, 1, 0) vs (1, 0, 1) away from octant.
    c @ 0x6 = (LatticePoint3D i1 (j1 ^ 1) k1 0)
    c @ 0x7 = (LatticePoint3D (i1 ^ 1) j1 (k1 ^ 1) 0)

    # (0, 1, 0) vs (1, 0, 1) away from octant, on second half-lattice.
    c @ 0x8 = (LatticePoint3D (i1 + i2) (j1 + (j2 ^ 1)) (k1 + k2) 1)
    c @ 0x9 = (LatticePoint3D (i1 + (i2 ^ 1)) (j1 + j2) (k1 + (k2 ^ 1)) 1)

    # (0, 0, 1) vs (1, 1, 0) away from octant.
    c @ 0xA = (LatticePoint3D i1 j1 (k1 ^ 1) 0)
    c @ 0xB = (LatticePoint3D (i1 ^ 1) (j1 ^ 1) k1 0)

    # (0, 0, 1) vs (1, 1, 0) away from octant, on second half-lattice.
    c @ 0xC = (LatticePoint3D (i1 + i2) (j1 + j2) (k1 + (k2 ^ 1)) 1)
    c @ 0xD = (LatticePoint3D (i1 + (i2 ^ 1)) (j1 + (j2 ^ 1)) (k1 + k2) 1)

    let c0 c1 c2 c3 c4 c5 c6 c7 c8 c9 cA cB cC cD =
        va-map
            inline (i)
                c @ i
            va-range (0x0D + 1)

    # First two points are guaranteed.
    c0.next-on-failure = 0x1 
    c0.next-on-success = 0x1
    c1.next-on-failure = 0x2 
    c1.next-on-success = 0x2

    # If c2 is in range, then we know c3 and c4 are not.
    c2.next-on-failure = 0x3
    c2.next-on-success = 0x5
    c3.next-on-failure = 0x4
    c3.next-on-success = 0x4

    # If c4 is in range, then we know c5 is not.
    c4.next-on-failure = 0x5 
    c4.next-on-success = 0x6
    c5.next-on-failure = 0x6 
    c5.next-on-success = 0x6

    # If c6 is in range, then we know c7 and c8 are not.
    c6.next-on-failure = 0x7
    c6.next-on-success = 0x9
    c7.next-on-failure = 0x8
    c7.next-on-success = 0x8

    # If c8 is in range, then we know c9 is not.
    c8.next-on-failure = 0x9
    c8.next-on-success = 0xA
    c9.next-on-failure = 0xA
    c9.next-on-success = 0xA

    # If cA is in range, then we know cB and cC are not.
    cA.next-on-failure = 0xB
    cA.next-on-success = 0xD
    cB.next-on-failure = 0xC
    cB.next-on-success = 0xC

    # If cC is in range, then we know cD is not.
    cC.next-on-failure = 0xD 
    cC.next-on-success = -1:usize
    cD.next-on-failure = -1:usize 
    cD.next-on-success = -1:usize

let lookup4D-index-tables =
    sugar-quote
        0x15 0x45 0x51 0x54 0x55 0x56 0x59 0x5A 0x65 0x66 0x69 0x6A 0x95 0x96 0x99 0x9A 0xA5 0xA6 0xA9 0xAA 
        0x15 0x45 0x51 0x55 0x56 0x59 0x5A 0x65 0x66 0x6A 0x95 0x96 0x9A 0xA6 0xAA 
        0x01 0x05 0x11 0x15 0x41 0x45 0x51 0x55 0x56 0x5A 0x66 0x6A 0x96 0x9A 0xA6 0xAA 
        0x01 0x15 0x16 0x45 0x46 0x51 0x52 0x55 0x56 0x5A 0x66 0x6A 0x96 0x9A 0xA6 0xAA 0xAB 
        0x15 0x45 0x54 0x55 0x56 0x59 0x5A 0x65 0x69 0x6A 0x95 0x99 0x9A 0xA9 0xAA 
        0x05 0x15 0x45 0x55 0x56 0x59 0x5A 0x65 0x66 0x69 0x6A 0x95 0x96 0x99 0x9A 0xAA 
        0x05 0x15 0x45 0x55 0x56 0x59 0x5A 0x66 0x6A 0x96 0x9A 0xAA 
        0x05 0x15 0x16 0x45 0x46 0x55 0x56 0x59 0x5A 0x66 0x6A 0x96 0x9A 0xAA 0xAB 
        0x04 0x05 0x14 0x15 0x44 0x45 0x54 0x55 0x59 0x5A 0x69 0x6A 0x99 0x9A 0xA9 0xAA 
        0x05 0x15 0x45 0x55 0x56 0x59 0x5A 0x69 0x6A 0x99 0x9A 0xAA 
        0x05 0x15 0x45 0x55 0x56 0x59 0x5A 0x6A 0x9A 0xAA 
        0x05 0x15 0x16 0x45 0x46 0x55 0x56 0x59 0x5A 0x5B 0x6A 0x9A 0xAA 0xAB 
        0x04 0x15 0x19 0x45 0x49 0x54 0x55 0x58 0x59 0x5A 0x69 0x6A 0x99 0x9A 0xA9 0xAA 0xAE 
        0x05 0x15 0x19 0x45 0x49 0x55 0x56 0x59 0x5A 0x69 0x6A 0x99 0x9A 0xAA 0xAE 
        0x05 0x15 0x19 0x45 0x49 0x55 0x56 0x59 0x5A 0x5E 0x6A 0x9A 0xAA 0xAE 
        0x05 0x15 0x1A 0x45 0x4A 0x55 0x56 0x59 0x5A 0x5B 0x5E 0x6A 0x9A 0xAA 0xAB 0xAE 0xAF 
        0x15 0x51 0x54 0x55 0x56 0x59 0x65 0x66 0x69 0x6A 0x95 0xA5 0xA6 0xA9 0xAA 
        0x11 0x15 0x51 0x55 0x56 0x59 0x5A 0x65 0x66 0x69 0x6A 0x95 0x96 0xA5 0xA6 0xAA 
        0x11 0x15 0x51 0x55 0x56 0x5A 0x65 0x66 0x6A 0x96 0xA6 0xAA 
        0x11 0x15 0x16 0x51 0x52 0x55 0x56 0x5A 0x65 0x66 0x6A 0x96 0xA6 0xAA 0xAB 
        0x14 0x15 0x54 0x55 0x56 0x59 0x5A 0x65 0x66 0x69 0x6A 0x95 0x99 0xA5 0xA9 0xAA 
        0x15 0x55 0x56 0x59 0x5A 0x65 0x66 0x69 0x6A 0x95 0x9A 0xA6 0xA9 0xAA 
        0x15 0x55 0x56 0x59 0x5A 0x65 0x66 0x69 0x6A 0x96 0x9A 0xA6 0xAA 0xAB 
        0x15 0x16 0x55 0x56 0x5A 0x66 0x6A 0x6B 0x96 0x9A 0xA6 0xAA 0xAB 
        0x14 0x15 0x54 0x55 0x59 0x5A 0x65 0x69 0x6A 0x99 0xA9 0xAA 
        0x15 0x55 0x56 0x59 0x5A 0x65 0x66 0x69 0x6A 0x99 0x9A 0xA9 0xAA 0xAE 
        0x15 0x55 0x56 0x59 0x5A 0x65 0x66 0x69 0x6A 0x9A 0xAA 
        0x15 0x16 0x55 0x56 0x59 0x5A 0x66 0x6A 0x6B 0x9A 0xAA 0xAB 
        0x14 0x15 0x19 0x54 0x55 0x58 0x59 0x5A 0x65 0x69 0x6A 0x99 0xA9 0xAA 0xAE 
        0x15 0x19 0x55 0x59 0x5A 0x69 0x6A 0x6E 0x99 0x9A 0xA9 0xAA 0xAE 
        0x15 0x19 0x55 0x56 0x59 0x5A 0x69 0x6A 0x6E 0x9A 0xAA 0xAE 
        0x15 0x1A 0x55 0x56 0x59 0x5A 0x6A 0x6B 0x6E 0x9A 0xAA 0xAB 0xAE 0xAF 
        0x10 0x11 0x14 0x15 0x50 0x51 0x54 0x55 0x65 0x66 0x69 0x6A 0xA5 0xA6 0xA9 0xAA 
        0x11 0x15 0x51 0x55 0x56 0x65 0x66 0x69 0x6A 0xA5 0xA6 0xAA 
        0x11 0x15 0x51 0x55 0x56 0x65 0x66 0x6A 0xA6 0xAA 
        0x11 0x15 0x16 0x51 0x52 0x55 0x56 0x65 0x66 0x67 0x6A 0xA6 0xAA 0xAB 
        0x14 0x15 0x54 0x55 0x59 0x65 0x66 0x69 0x6A 0xA5 0xA9 0xAA 
        0x15 0x55 0x56 0x59 0x5A 0x65 0x66 0x69 0x6A 0xA5 0xA6 0xA9 0xAA 0xBA 
        0x15 0x55 0x56 0x59 0x5A 0x65 0x66 0x69 0x6A 0xA6 0xAA 
        0x15 0x16 0x55 0x56 0x5A 0x65 0x66 0x6A 0x6B 0xA6 0xAA 0xAB 
        0x14 0x15 0x54 0x55 0x59 0x65 0x69 0x6A 0xA9 0xAA 
        0x15 0x55 0x56 0x59 0x5A 0x65 0x66 0x69 0x6A 0xA9 0xAA 
        0x15 0x55 0x56 0x59 0x5A 0x65 0x66 0x69 0x6A 0xAA 
        0x15 0x16 0x55 0x56 0x59 0x5A 0x65 0x66 0x69 0x6A 0x6B 0xAA 0xAB 
        0x14 0x15 0x19 0x54 0x55 0x58 0x59 0x65 0x69 0x6A 0x6D 0xA9 0xAA 0xAE 
        0x15 0x19 0x55 0x59 0x5A 0x65 0x69 0x6A 0x6E 0xA9 0xAA 0xAE 
        0x15 0x19 0x55 0x56 0x59 0x5A 0x65 0x66 0x69 0x6A 0x6E 0xAA 0xAE 
        0x15 0x55 0x56 0x59 0x5A 0x66 0x69 0x6A 0x6B 0x6E 0x9A 0xAA 0xAB 0xAE 0xAF 
        0x10 0x15 0x25 0x51 0x54 0x55 0x61 0x64 0x65 0x66 0x69 0x6A 0xA5 0xA6 0xA9 0xAA 0xBA 
        0x11 0x15 0x25 0x51 0x55 0x56 0x61 0x65 0x66 0x69 0x6A 0xA5 0xA6 0xAA 0xBA 
        0x11 0x15 0x25 0x51 0x55 0x56 0x61 0x65 0x66 0x6A 0x76 0xA6 0xAA 0xBA 
        0x11 0x15 0x26 0x51 0x55 0x56 0x62 0x65 0x66 0x67 0x6A 0x76 0xA6 0xAA 0xAB 0xBA 0xBB 
        0x14 0x15 0x25 0x54 0x55 0x59 0x64 0x65 0x66 0x69 0x6A 0xA5 0xA9 0xAA 0xBA 
        0x15 0x25 0x55 0x65 0x66 0x69 0x6A 0x7A 0xA5 0xA6 0xA9 0xAA 0xBA 
        0x15 0x25 0x55 0x56 0x65 0x66 0x69 0x6A 0x7A 0xA6 0xAA 0xBA 
        0x15 0x26 0x55 0x56 0x65 0x66 0x6A 0x6B 0x7A 0xA6 0xAA 0xAB 0xBA 0xBB 
        0x14 0x15 0x25 0x54 0x55 0x59 0x64 0x65 0x69 0x6A 0x79 0xA9 0xAA 0xBA 
        0x15 0x25 0x55 0x59 0x65 0x66 0x69 0x6A 0x7A 0xA9 0xAA 0xBA 
        0x15 0x25 0x55 0x56 0x59 0x5A 0x65 0x66 0x69 0x6A 0x7A 0xAA 0xBA 
        0x15 0x55 0x56 0x5A 0x65 0x66 0x69 0x6A 0x6B 0x7A 0xA6 0xAA 0xAB 0xBA 0xBB 
        0x14 0x15 0x29 0x54 0x55 0x59 0x65 0x68 0x69 0x6A 0x6D 0x79 0xA9 0xAA 0xAE 0xBA 0xBE 
        0x15 0x29 0x55 0x59 0x65 0x69 0x6A 0x6E 0x7A 0xA9 0xAA 0xAE 0xBA 0xBE 
        0x15 0x55 0x59 0x5A 0x65 0x66 0x69 0x6A 0x6E 0x7A 0xA9 0xAA 0xAE 0xBA 0xBE 
        0x15 0x55 0x56 0x59 0x5A 0x65 0x66 0x69 0x6A 0x6B 0x6E 0x7A 0xAA 0xAB 0xAE 0xBA 0xBF 
        0x45 0x51 0x54 0x55 0x56 0x59 0x65 0x95 0x96 0x99 0x9A 0xA5 0xA6 0xA9 0xAA 
        0x41 0x45 0x51 0x55 0x56 0x59 0x5A 0x65 0x66 0x95 0x96 0x99 0x9A 0xA5 0xA6 0xAA 
        0x41 0x45 0x51 0x55 0x56 0x5A 0x66 0x95 0x96 0x9A 0xA6 0xAA 
        0x41 0x45 0x46 0x51 0x52 0x55 0x56 0x5A 0x66 0x95 0x96 0x9A 0xA6 0xAA 0xAB 
        0x44 0x45 0x54 0x55 0x56 0x59 0x5A 0x65 0x69 0x95 0x96 0x99 0x9A 0xA5 0xA9 0xAA 
        0x45 0x55 0x56 0x59 0x5A 0x65 0x6A 0x95 0x96 0x99 0x9A 0xA6 0xA9 0xAA 
        0x45 0x55 0x56 0x59 0x5A 0x66 0x6A 0x95 0x96 0x99 0x9A 0xA6 0xAA 0xAB 
        0x45 0x46 0x55 0x56 0x5A 0x66 0x6A 0x96 0x9A 0x9B 0xA6 0xAA 0xAB 
        0x44 0x45 0x54 0x55 0x59 0x5A 0x69 0x95 0x99 0x9A 0xA9 0xAA 
        0x45 0x55 0x56 0x59 0x5A 0x69 0x6A 0x95 0x96 0x99 0x9A 0xA9 0xAA 0xAE 
        0x45 0x55 0x56 0x59 0x5A 0x6A 0x95 0x96 0x99 0x9A 0xAA 
        0x45 0x46 0x55 0x56 0x59 0x5A 0x6A 0x96 0x9A 0x9B 0xAA 0xAB 
        0x44 0x45 0x49 0x54 0x55 0x58 0x59 0x5A 0x69 0x95 0x99 0x9A 0xA9 0xAA 0xAE 
        0x45 0x49 0x55 0x59 0x5A 0x69 0x6A 0x99 0x9A 0x9E 0xA9 0xAA 0xAE 
        0x45 0x49 0x55 0x56 0x59 0x5A 0x6A 0x99 0x9A 0x9E 0xAA 0xAE 
        0x45 0x4A 0x55 0x56 0x59 0x5A 0x6A 0x9A 0x9B 0x9E 0xAA 0xAB 0xAE 0xAF 
        0x50 0x51 0x54 0x55 0x56 0x59 0x65 0x66 0x69 0x95 0x96 0x99 0xA5 0xA6 0xA9 0xAA 
        0x51 0x55 0x56 0x59 0x65 0x66 0x6A 0x95 0x96 0x9A 0xA5 0xA6 0xA9 0xAA 
        0x51 0x55 0x56 0x5A 0x65 0x66 0x6A 0x95 0x96 0x9A 0xA5 0xA6 0xAA 0xAB 
        0x51 0x52 0x55 0x56 0x5A 0x66 0x6A 0x96 0x9A 0xA6 0xA7 0xAA 0xAB 
        0x54 0x55 0x56 0x59 0x65 0x69 0x6A 0x95 0x99 0x9A 0xA5 0xA6 0xA9 0xAA 
        0x55 0x56 0x59 0x5A 0x65 0x66 0x69 0x6A 0x95 0x96 0x99 0x9A 0xA5 0xA6 0xA9 0xAA 
        0x15 0x45 0x51 0x55 0x56 0x59 0x5A 0x65 0x66 0x6A 0x95 0x96 0x9A 0xA6 0xAA 0xAB 
        0x55 0x56 0x5A 0x66 0x6A 0x96 0x9A 0xA6 0xAA 0xAB 
        0x54 0x55 0x59 0x5A 0x65 0x69 0x6A 0x95 0x99 0x9A 0xA5 0xA9 0xAA 0xAE 
        0x15 0x45 0x54 0x55 0x56 0x59 0x5A 0x65 0x69 0x6A 0x95 0x99 0x9A 0xA9 0xAA 0xAE 
        0x15 0x45 0x55 0x56 0x59 0x5A 0x65 0x66 0x69 0x6A 0x95 0x96 0x99 0x9A 0xA6 0xA9 0xAA 0xAB 0xAE 
        0x55 0x56 0x59 0x5A 0x66 0x6A 0x96 0x9A 0xA6 0xAA 0xAB 
        0x54 0x55 0x58 0x59 0x5A 0x69 0x6A 0x99 0x9A 0xA9 0xAA 0xAD 0xAE 
        0x55 0x59 0x5A 0x69 0x6A 0x99 0x9A 0xA9 0xAA 0xAE 
        0x55 0x56 0x59 0x5A 0x69 0x6A 0x99 0x9A 0xA9 0xAA 0xAE 
        0x55 0x56 0x59 0x5A 0x6A 0x9A 0xAA 0xAB 0xAE 0xAF 
        0x50 0x51 0x54 0x55 0x65 0x66 0x69 0x95 0xA5 0xA6 0xA9 0xAA 
        0x51 0x55 0x56 0x65 0x66 0x69 0x6A 0x95 0x96 0xA5 0xA6 0xA9 0xAA 0xBA 
        0x51 0x55 0x56 0x65 0x66 0x6A 0x95 0x96 0xA5 0xA6 0xAA 
        0x51 0x52 0x55 0x56 0x65 0x66 0x6A 0x96 0xA6 0xA7 0xAA 0xAB 
        0x54 0x55 0x59 0x65 0x66 0x69 0x6A 0x95 0x99 0xA5 0xA6 0xA9 0xAA 0xBA 
        0x15 0x51 0x54 0x55 0x56 0x59 0x65 0x66 0x69 0x6A 0x95 0xA5 0xA6 0xA9 0xAA 0xBA 
        0x15 0x51 0x55 0x56 0x59 0x5A 0x65 0x66 0x69 0x6A 0x95 0x96 0x9A 0xA5 0xA6 0xA9 0xAA 0xAB 0xBA 
        0x55 0x56 0x5A 0x65 0x66 0x6A 0x96 0x9A 0xA6 0xAA 0xAB 
        0x54 0x55 0x59 0x65 0x69 0x6A 0x95 0x99 0xA5 0xA9 0xAA 
        0x15 0x54 0x55 0x56 0x59 0x5A 0x65 0x66 0x69 0x6A 0x95 0x99 0x9A 0xA5 0xA6 0xA9 0xAA 0xAE 0xBA 
        0x15 0x55 0x56 0x59 0x5A 0x65 0x66 0x69 0x6A 0x9A 0xA6 0xA9 0xAA 
        0x15 0x55 0x56 0x59 0x5A 0x65 0x66 0x69 0x6A 0x96 0x9A 0xA6 0xAA 0xAB 
        0x54 0x55 0x58 0x59 0x65 0x69 0x6A 0x99 0xA9 0xAA 0xAD 0xAE 
        0x55 0x59 0x5A 0x65 0x69 0x6A 0x99 0x9A 0xA9 0xAA 0xAE 
        0x15 0x55 0x56 0x59 0x5A 0x65 0x66 0x69 0x6A 0x99 0x9A 0xA9 0xAA 0xAE 
        0x15 0x55 0x56 0x59 0x5A 0x66 0x69 0x6A 0x9A 0xAA 0xAB 0xAE 0xAF 
        0x50 0x51 0x54 0x55 0x61 0x64 0x65 0x66 0x69 0x95 0xA5 0xA6 0xA9 0xAA 0xBA 
        0x51 0x55 0x61 0x65 0x66 0x69 0x6A 0xA5 0xA6 0xA9 0xAA 0xB6 0xBA 
        0x51 0x55 0x56 0x61 0x65 0x66 0x6A 0xA5 0xA6 0xAA 0xB6 0xBA 
        0x51 0x55 0x56 0x62 0x65 0x66 0x6A 0xA6 0xA7 0xAA 0xAB 0xB6 0xBA 0xBB 
        0x54 0x55 0x64 0x65 0x66 0x69 0x6A 0xA5 0xA6 0xA9 0xAA 0xB9 0xBA 
        0x55 0x65 0x66 0x69 0x6A 0xA5 0xA6 0xA9 0xAA 0xBA 
        0x55 0x56 0x65 0x66 0x69 0x6A 0xA5 0xA6 0xA9 0xAA 0xBA 
        0x55 0x56 0x65 0x66 0x6A 0xA6 0xAA 0xAB 0xBA 0xBB 
        0x54 0x55 0x59 0x64 0x65 0x69 0x6A 0xA5 0xA9 0xAA 0xB9 0xBA 
        0x55 0x59 0x65 0x66 0x69 0x6A 0xA5 0xA6 0xA9 0xAA 0xBA 
        0x15 0x55 0x56 0x59 0x5A 0x65 0x66 0x69 0x6A 0xA5 0xA6 0xA9 0xAA 0xBA 
        0x15 0x55 0x56 0x5A 0x65 0x66 0x69 0x6A 0xA6 0xAA 0xAB 0xBA 0xBB 
        0x54 0x55 0x59 0x65 0x68 0x69 0x6A 0xA9 0xAA 0xAD 0xAE 0xB9 0xBA 0xBE 
        0x55 0x59 0x65 0x69 0x6A 0xA9 0xAA 0xAE 0xBA 0xBE 
        0x15 0x55 0x59 0x5A 0x65 0x66 0x69 0x6A 0xA9 0xAA 0xAE 0xBA 0xBE 
        0x55 0x56 0x59 0x5A 0x65 0x66 0x69 0x6A 0xAA 0xAB 0xAE 0xBA 0xBF 
        0x40 0x41 0x44 0x45 0x50 0x51 0x54 0x55 0x95 0x96 0x99 0x9A 0xA5 0xA6 0xA9 0xAA 
        0x41 0x45 0x51 0x55 0x56 0x95 0x96 0x99 0x9A 0xA5 0xA6 0xAA 
        0x41 0x45 0x51 0x55 0x56 0x95 0x96 0x9A 0xA6 0xAA 
        0x41 0x45 0x46 0x51 0x52 0x55 0x56 0x95 0x96 0x97 0x9A 0xA6 0xAA 0xAB 
        0x44 0x45 0x54 0x55 0x59 0x95 0x96 0x99 0x9A 0xA5 0xA9 0xAA 
        0x45 0x55 0x56 0x59 0x5A 0x95 0x96 0x99 0x9A 0xA5 0xA6 0xA9 0xAA 0xEA 
        0x45 0x55 0x56 0x59 0x5A 0x95 0x96 0x99 0x9A 0xA6 0xAA 
        0x45 0x46 0x55 0x56 0x5A 0x95 0x96 0x9A 0x9B 0xA6 0xAA 0xAB 
        0x44 0x45 0x54 0x55 0x59 0x95 0x99 0x9A 0xA9 0xAA 
        0x45 0x55 0x56 0x59 0x5A 0x95 0x96 0x99 0x9A 0xA9 0xAA 
        0x45 0x55 0x56 0x59 0x5A 0x95 0x96 0x99 0x9A 0xAA 
        0x45 0x46 0x55 0x56 0x59 0x5A 0x95 0x96 0x99 0x9A 0x9B 0xAA 0xAB 
        0x44 0x45 0x49 0x54 0x55 0x58 0x59 0x95 0x99 0x9A 0x9D 0xA9 0xAA 0xAE 
        0x45 0x49 0x55 0x59 0x5A 0x95 0x99 0x9A 0x9E 0xA9 0xAA 0xAE 
        0x45 0x49 0x55 0x56 0x59 0x5A 0x95 0x96 0x99 0x9A 0x9E 0xAA 0xAE 
        0x45 0x55 0x56 0x59 0x5A 0x6A 0x96 0x99 0x9A 0x9B 0x9E 0xAA 0xAB 0xAE 0xAF 
        0x50 0x51 0x54 0x55 0x65 0x95 0x96 0x99 0xA5 0xA6 0xA9 0xAA 
        0x51 0x55 0x56 0x65 0x66 0x95 0x96 0x99 0x9A 0xA5 0xA6 0xA9 0xAA 0xEA 
        0x51 0x55 0x56 0x65 0x66 0x95 0x96 0x9A 0xA5 0xA6 0xAA 
        0x51 0x52 0x55 0x56 0x66 0x95 0x96 0x9A 0xA6 0xA7 0xAA 0xAB 
        0x54 0x55 0x59 0x65 0x69 0x95 0x96 0x99 0x9A 0xA5 0xA6 0xA9 0xAA 0xEA 
        0x45 0x51 0x54 0x55 0x56 0x59 0x65 0x95 0x96 0x99 0x9A 0xA5 0xA6 0xA9 0xAA 0xEA 
        0x45 0x51 0x55 0x56 0x59 0x5A 0x65 0x66 0x6A 0x95 0x96 0x99 0x9A 0xA5 0xA6 0xA9 0xAA 0xAB 0xEA 
        0x55 0x56 0x5A 0x66 0x6A 0x95 0x96 0x9A 0xA6 0xAA 0xAB 
        0x54 0x55 0x59 0x65 0x69 0x95 0x99 0x9A 0xA5 0xA9 0xAA 
        0x45 0x54 0x55 0x56 0x59 0x5A 0x65 0x69 0x6A 0x95 0x96 0x99 0x9A 0xA5 0xA6 0xA9 0xAA 0xAE 0xEA 
        0x45 0x55 0x56 0x59 0x5A 0x6A 0x95 0x96 0x99 0x9A 0xA6 0xA9 0xAA 
        0x45 0x55 0x56 0x59 0x5A 0x66 0x6A 0x95 0x96 0x99 0x9A 0xA6 0xAA 0xAB 
        0x54 0x55 0x58 0x59 0x69 0x95 0x99 0x9A 0xA9 0xAA 0xAD 0xAE 
        0x55 0x59 0x5A 0x69 0x6A 0x95 0x99 0x9A 0xA9 0xAA 0xAE 
        0x45 0x55 0x56 0x59 0x5A 0x69 0x6A 0x95 0x96 0x99 0x9A 0xA9 0xAA 0xAE 
        0x45 0x55 0x56 0x59 0x5A 0x6A 0x96 0x99 0x9A 0xAA 0xAB 0xAE 0xAF 
        0x50 0x51 0x54 0x55 0x65 0x95 0xA5 0xA6 0xA9 0xAA 
        0x51 0x55 0x56 0x65 0x66 0x95 0x96 0xA5 0xA6 0xA9 0xAA 
        0x51 0x55 0x56 0x65 0x66 0x95 0x96 0xA5 0xA6 0xAA 
        0x51 0x52 0x55 0x56 0x65 0x66 0x95 0x96 0xA5 0xA6 0xA7 0xAA 0xAB 
        0x54 0x55 0x59 0x65 0x69 0x95 0x99 0xA5 0xA6 0xA9 0xAA 
        0x51 0x54 0x55 0x56 0x59 0x65 0x66 0x69 0x6A 0x95 0x96 0x99 0x9A 0xA5 0xA6 0xA9 0xAA 0xBA 0xEA 
        0x51 0x55 0x56 0x65 0x66 0x6A 0x95 0x96 0x9A 0xA5 0xA6 0xA9 0xAA 
        0x51 0x55 0x56 0x5A 0x65 0x66 0x6A 0x95 0x96 0x9A 0xA5 0xA6 0xAA 0xAB 
        0x54 0x55 0x59 0x65 0x69 0x95 0x99 0xA5 0xA9 0xAA 
        0x54 0x55 0x59 0x65 0x69 0x6A 0x95 0x99 0x9A 0xA5 0xA6 0xA9 0xAA 
        0x55 0x56 0x59 0x5A 0x65 0x66 0x69 0x6A 0x95 0x96 0x99 0x9A 0xA5 0xA6 0xA9 0xAA 
        0x55 0x56 0x59 0x5A 0x65 0x66 0x6A 0x95 0x96 0x9A 0xA6 0xA9 0xAA 0xAB 
        0x54 0x55 0x58 0x59 0x65 0x69 0x95 0x99 0xA5 0xA9 0xAA 0xAD 0xAE 
        0x54 0x55 0x59 0x5A 0x65 0x69 0x6A 0x95 0x99 0x9A 0xA5 0xA9 0xAA 0xAE 
        0x55 0x56 0x59 0x5A 0x65 0x69 0x6A 0x95 0x99 0x9A 0xA6 0xA9 0xAA 0xAE 
        0x55 0x56 0x59 0x5A 0x66 0x69 0x6A 0x96 0x99 0x9A 0xA6 0xA9 0xAA 0xAB 0xAE 0xAF 
        0x50 0x51 0x54 0x55 0x61 0x64 0x65 0x95 0xA5 0xA6 0xA9 0xAA 0xB5 0xBA 
        0x51 0x55 0x61 0x65 0x66 0x95 0xA5 0xA6 0xA9 0xAA 0xB6 0xBA 
        0x51 0x55 0x56 0x61 0x65 0x66 0x95 0x96 0xA5 0xA6 0xAA 0xB6 0xBA 
        0x51 0x55 0x56 0x65 0x66 0x6A 0x96 0xA5 0xA6 0xA7 0xAA 0xAB 0xB6 0xBA 0xBB 
        0x54 0x55 0x64 0x65 0x69 0x95 0xA5 0xA6 0xA9 0xAA 0xB9 0xBA 
        0x55 0x65 0x66 0x69 0x6A 0x95 0xA5 0xA6 0xA9 0xAA 0xBA 
        0x51 0x55 0x56 0x65 0x66 0x69 0x6A 0x95 0x96 0xA5 0xA6 0xA9 0xAA 0xBA 
        0x51 0x55 0x56 0x65 0x66 0x6A 0x96 0xA5 0xA6 0xAA 0xAB 0xBA 0xBB 
        0x54 0x55 0x59 0x64 0x65 0x69 0x95 0x99 0xA5 0xA9 0xAA 0xB9 0xBA 
        0x54 0x55 0x59 0x65 0x66 0x69 0x6A 0x95 0x99 0xA5 0xA6 0xA9 0xAA 0xBA 
        0x55 0x56 0x59 0x65 0x66 0x69 0x6A 0x95 0x9A 0xA5 0xA6 0xA9 0xAA 0xBA 
        0x55 0x56 0x5A 0x65 0x66 0x69 0x6A 0x96 0x9A 0xA5 0xA6 0xA9 0xAA 0xAB 0xBA 0xBB 
        0x54 0x55 0x59 0x65 0x69 0x6A 0x99 0xA5 0xA9 0xAA 0xAD 0xAE 0xB9 0xBA 0xBE 
        0x54 0x55 0x59 0x65 0x69 0x6A 0x99 0xA5 0xA9 0xAA 0xAE 0xBA 0xBE 
        0x55 0x59 0x5A 0x65 0x66 0x69 0x6A 0x99 0x9A 0xA5 0xA6 0xA9 0xAA 0xAE 0xBA 0xBE 
        0x55 0x56 0x59 0x5A 0x65 0x66 0x69 0x6A 0x9A 0xA6 0xA9 0xAA 0xAB 0xAE 0xBA 
        0x40 0x45 0x51 0x54 0x55 0x85 0x91 0x94 0x95 0x96 0x99 0x9A 0xA5 0xA6 0xA9 0xAA 0xEA 
        0x41 0x45 0x51 0x55 0x56 0x85 0x91 0x95 0x96 0x99 0x9A 0xA5 0xA6 0xAA 0xEA 
        0x41 0x45 0x51 0x55 0x56 0x85 0x91 0x95 0x96 0x9A 0xA6 0xAA 0xD6 0xEA 
        0x41 0x45 0x51 0x55 0x56 0x86 0x92 0x95 0x96 0x97 0x9A 0xA6 0xAA 0xAB 0xD6 0xEA 0xEB 
        0x44 0x45 0x54 0x55 0x59 0x85 0x94 0x95 0x96 0x99 0x9A 0xA5 0xA9 0xAA 0xEA 
        0x45 0x55 0x85 0x95 0x96 0x99 0x9A 0xA5 0xA6 0xA9 0xAA 0xDA 0xEA 
        0x45 0x55 0x56 0x85 0x95 0x96 0x99 0x9A 0xA6 0xAA 0xDA 0xEA 
        0x45 0x55 0x56 0x86 0x95 0x96 0x9A 0x9B 0xA6 0xAA 0xAB 0xDA 0xEA 0xEB 
        0x44 0x45 0x54 0x55 0x59 0x85 0x94 0x95 0x99 0x9A 0xA9 0xAA 0xD9 0xEA 
        0x45 0x55 0x59 0x85 0x95 0x96 0x99 0x9A 0xA9 0xAA 0xDA 0xEA 
        0x45 0x55 0x56 0x59 0x5A 0x85 0x95 0x96 0x99 0x9A 0xAA 0xDA 0xEA 
        0x45 0x55 0x56 0x5A 0x95 0x96 0x99 0x9A 0x9B 0xA6 0xAA 0xAB 0xDA 0xEA 0xEB 
        0x44 0x45 0x54 0x55 0x59 0x89 0x95 0x98 0x99 0x9A 0x9D 0xA9 0xAA 0xAE 0xD9 0xEA 0xEE 
        0x45 0x55 0x59 0x89 0x95 0x99 0x9A 0x9E 0xA9 0xAA 0xAE 0xDA 0xEA 0xEE 
        0x45 0x55 0x59 0x5A 0x95 0x96 0x99 0x9A 0x9E 0xA9 0xAA 0xAE 0xDA 0xEA 0xEE 
        0x45 0x55 0x56 0x59 0x5A 0x95 0x96 0x99 0x9A 0x9B 0x9E 0xAA 0xAB 0xAE 0xDA 0xEA 0xEF 
        0x50 0x51 0x54 0x55 0x65 0x91 0x94 0x95 0x96 0x99 0xA5 0xA6 0xA9 0xAA 0xEA 
        0x51 0x55 0x91 0x95 0x96 0x99 0x9A 0xA5 0xA6 0xA9 0xAA 0xE6 0xEA 
        0x51 0x55 0x56 0x91 0x95 0x96 0x9A 0xA5 0xA6 0xAA 0xE6 0xEA 
        0x51 0x55 0x56 0x92 0x95 0x96 0x9A 0xA6 0xA7 0xAA 0xAB 0xE6 0xEA 0xEB 
        0x54 0x55 0x94 0x95 0x96 0x99 0x9A 0xA5 0xA6 0xA9 0xAA 0xE9 0xEA 
        0x55 0x95 0x96 0x99 0x9A 0xA5 0xA6 0xA9 0xAA 0xEA 
        0x55 0x56 0x95 0x96 0x99 0x9A 0xA5 0xA6 0xA9 0xAA 0xEA 
        0x55 0x56 0x95 0x96 0x9A 0xA6 0xAA 0xAB 0xEA 0xEB 
        0x54 0x55 0x59 0x94 0x95 0x99 0x9A 0xA5 0xA9 0xAA 0xE9 0xEA 
        0x55 0x59 0x95 0x96 0x99 0x9A 0xA5 0xA6 0xA9 0xAA 0xEA 
        0x45 0x55 0x56 0x59 0x5A 0x95 0x96 0x99 0x9A 0xA5 0xA6 0xA9 0xAA 0xEA 
        0x45 0x55 0x56 0x5A 0x95 0x96 0x99 0x9A 0xA6 0xAA 0xAB 0xEA 0xEB 
        0x54 0x55 0x59 0x95 0x98 0x99 0x9A 0xA9 0xAA 0xAD 0xAE 0xE9 0xEA 0xEE 
        0x55 0x59 0x95 0x99 0x9A 0xA9 0xAA 0xAE 0xEA 0xEE 
        0x45 0x55 0x59 0x5A 0x95 0x96 0x99 0x9A 0xA9 0xAA 0xAE 0xEA 0xEE 
        0x55 0x56 0x59 0x5A 0x95 0x96 0x99 0x9A 0xAA 0xAB 0xAE 0xEA 0xEF 
        0x50 0x51 0x54 0x55 0x65 0x91 0x94 0x95 0xA5 0xA6 0xA9 0xAA 0xE5 0xEA 
        0x51 0x55 0x65 0x91 0x95 0x96 0xA5 0xA6 0xA9 0xAA 0xE6 0xEA 
        0x51 0x55 0x56 0x65 0x66 0x91 0x95 0x96 0xA5 0xA6 0xAA 0xE6 0xEA 
        0x51 0x55 0x56 0x66 0x95 0x96 0x9A 0xA5 0xA6 0xA7 0xAA 0xAB 0xE6 0xEA 0xEB 
        0x54 0x55 0x65 0x94 0x95 0x99 0xA5 0xA6 0xA9 0xAA 0xE9 0xEA 
        0x55 0x65 0x95 0x96 0x99 0x9A 0xA5 0xA6 0xA9 0xAA 0xEA 
        0x51 0x55 0x56 0x65 0x66 0x95 0x96 0x99 0x9A 0xA5 0xA6 0xA9 0xAA 0xEA 
        0x51 0x55 0x56 0x66 0x95 0x96 0x9A 0xA5 0xA6 0xAA 0xAB 0xEA 0xEB 
        0x54 0x55 0x59 0x65 0x69 0x94 0x95 0x99 0xA5 0xA9 0xAA 0xE9 0xEA 
        0x54 0x55 0x59 0x65 0x69 0x95 0x96 0x99 0x9A 0xA5 0xA6 0xA9 0xAA 0xEA 
        0x55 0x56 0x59 0x65 0x6A 0x95 0x96 0x99 0x9A 0xA5 0xA6 0xA9 0xAA 0xEA 
        0x55 0x56 0x5A 0x66 0x6A 0x95 0x96 0x99 0x9A 0xA5 0xA6 0xA9 0xAA 0xAB 0xEA 0xEB 
        0x54 0x55 0x59 0x69 0x95 0x99 0x9A 0xA5 0xA9 0xAA 0xAD 0xAE 0xE9 0xEA 0xEE 
        0x54 0x55 0x59 0x69 0x95 0x99 0x9A 0xA5 0xA9 0xAA 0xAE 0xEA 0xEE 
        0x55 0x59 0x5A 0x69 0x6A 0x95 0x96 0x99 0x9A 0xA5 0xA6 0xA9 0xAA 0xAE 0xEA 0xEE 
        0x55 0x56 0x59 0x5A 0x6A 0x95 0x96 0x99 0x9A 0xA6 0xA9 0xAA 0xAB 0xAE 0xEA 
        0x50 0x51 0x54 0x55 0x65 0x95 0xA1 0xA4 0xA5 0xA6 0xA9 0xAA 0xB5 0xBA 0xE5 0xEA 0xFA 
        0x51 0x55 0x65 0x95 0xA1 0xA5 0xA6 0xA9 0xAA 0xB6 0xBA 0xE6 0xEA 0xFA 
        0x51 0x55 0x65 0x66 0x95 0x96 0xA5 0xA6 0xA9 0xAA 0xB6 0xBA 0xE6 0xEA 0xFA 
        0x51 0x55 0x56 0x65 0x66 0x95 0x96 0xA5 0xA6 0xA7 0xAA 0xAB 0xB6 0xBA 0xE6 0xEA 0xFB 
        0x54 0x55 0x65 0x95 0xA4 0xA5 0xA6 0xA9 0xAA 0xB9 0xBA 0xE9 0xEA 0xFA 
        0x55 0x65 0x95 0xA5 0xA6 0xA9 0xAA 0xBA 0xEA 0xFA 
        0x51 0x55 0x65 0x66 0x95 0x96 0xA5 0xA6 0xA9 0xAA 0xBA 0xEA 0xFA 
        0x55 0x56 0x65 0x66 0x95 0x96 0xA5 0xA6 0xAA 0xAB 0xBA 0xEA 0xFB 
        0x54 0x55 0x65 0x69 0x95 0x99 0xA5 0xA6 0xA9 0xAA 0xB9 0xBA 0xE9 0xEA 0xFA 
        0x54 0x55 0x65 0x69 0x95 0x99 0xA5 0xA6 0xA9 0xAA 0xBA 0xEA 0xFA 
        0x55 0x65 0x66 0x69 0x6A 0x95 0x96 0x99 0x9A 0xA5 0xA6 0xA9 0xAA 0xBA 0xEA 0xFA 
        0x55 0x56 0x65 0x66 0x6A 0x95 0x96 0x9A 0xA5 0xA6 0xA9 0xAA 0xAB 0xBA 0xEA 
        0x54 0x55 0x59 0x65 0x69 0x95 0x99 0xA5 0xA9 0xAA 0xAD 0xAE 0xB9 0xBA 0xE9 0xEA 0xFE 
        0x55 0x59 0x65 0x69 0x95 0x99 0xA5 0xA9 0xAA 0xAE 0xBA 0xEA 0xFE 
        0x55 0x59 0x65 0x69 0x6A 0x95 0x99 0x9A 0xA5 0xA6 0xA9 0xAA 0xAE 0xBA 0xEA 
        0x55 0x56 0x59 0x5A 0x65 0x66 0x69 0x6A 0x95 0x96 0x99 0x9A 0xA5 0xA6 0xA9 0xAA 0xAB 0xAE 0xBA 0xEA 

# conceptually the 4D LUT is 2-dimensional, but we flatten it and save the ranges to have a constant array size.
local LOOKUP_4D_RANGES : (array (tuple (start = i32) (len = i32)) 256)
local lookup4D-pregen : (Array i32)
let LOOKUP_4D_SIZE =
    fold (count = 0) for i t in (enumerate lookup4D-index-tables)
        t as:= list

        # flatten table
        for v in t
            'append lookup4D-pregen (v as i32)

        let size = (countof t)
        LOOKUP_4D_RANGES @ i = (tupleof (start = count) (len = size))
        count + size
run-stage;

global LOOKUP_4D_RANGES = LOOKUP_4D_RANGES
local lattice-points : (array LatticePoint4D 256)
for i in (range 256)
    let cx cy cz cw =
        ((i >> 0) & 3) - 1
        ((i >> 2) & 3) - 1
        ((i >> 4) & 3) - 1
        ((i >> 6) & 3) - 1
    lattice-points @ i = (LatticePoint4D cx cy cz cw)

local LOOKUP_4D : (Array LatticePoint4D LOOKUP_4D_SIZE)
'resize LOOKUP_4D LOOKUP_4D_SIZE
for trange in LOOKUP_4D_RANGES
    let start end = trange.start (trange.start + trange.len)
    for i in (range start end)
        LOOKUP_4D @ i = (lattice-points @ (lookup4D-pregen @ i))

# due to a limitation of the codegen, we can't have a static initialized array of that size.
  So we'll convert it to a global string instead, and later convert the pointer.
local LOOKUP_4D_STORAGE =
    string
        (imply LOOKUP_4D pointer) as (@ i8)
        (countof LOOKUP_4D) * (sizeof LatticePoint4D)

local GRADIENTS_2D : (array Grad2 PSIZE)
local grad2 =
    arrayof Grad2
        Grad2 0.130526192220052:f64  0.99144486137381:f64
        Grad2 0.38268343236509:f64   0.923879532511287:f64
        Grad2 0.608761429008721:f64  0.793353340291235:f64
        Grad2 0.793353340291235:f64  0.608761429008721:f64
        Grad2 0.923879532511287:f64  0.38268343236509:f64
        Grad2 0.99144486137381:f64   0.130526192220051:f64
        Grad2 0.99144486137381:f64  -0.130526192220051:f64
        Grad2 0.923879532511287:f64 -0.38268343236509:f64
        Grad2 0.793353340291235:f64 -0.60876142900872:f64
        Grad2 0.608761429008721:f64 -0.793353340291235:f64
        Grad2 0.38268343236509:f64  -0.923879532511287:f64
        Grad2 0.130526192220052:f64 -0.99144486137381:f64
        Grad2 -0.130526192220052:f64 -0.99144486137381:f64
        Grad2 -0.38268343236509:f64  -0.923879532511287:f64
        Grad2 -0.608761429008721:f64 -0.793353340291235:f64
        Grad2 -0.793353340291235:f64 -0.608761429008721:f64
        Grad2 -0.923879532511287:f64 -0.38268343236509:f64
        Grad2 -0.99144486137381:f64  -0.130526192220052:f64
        Grad2 -0.99144486137381:f64   0.130526192220051:f64
        Grad2 -0.923879532511287:f64  0.38268343236509:f64
        Grad2 -0.793353340291235:f64  0.608761429008721:f64
        Grad2 -0.608761429008721:f64  0.793353340291235:f64
        Grad2 -0.38268343236509:f64   0.923879532511287:f64
        Grad2 -0.130526192220052:f64  0.99144486137381:f64

for g in grad2
    g.dx /= N2
    g.dy /= N2

for i el in (enumerate GRADIENTS_2D)
    el = grad2 @ (i % (countof grad2))
deref GRADIENTS_2D

local GRADIENTS_3D : (array Grad3 PSIZE)
local grad3 =
    arrayof Grad3
        Grad3 -2.22474487139:f64      -2.22474487139:f64      -1.0:f64
        Grad3 -2.22474487139:f64      -2.22474487139:f64       1.0:f64
        Grad3 -3.0862664687972017:f64 -1.1721513422464978:f64  0.0:f64
        Grad3 -1.1721513422464978:f64 -3.0862664687972017:f64  0.0:f64
        Grad3 -2.22474487139:f64      -1.0:f64                -2.22474487139:f64
        Grad3 -2.22474487139:f64       1.0:f64                -2.22474487139:f64
        Grad3 -1.1721513422464978:f64  0.0:f64                -3.0862664687972017:f64
        Grad3 -3.0862664687972017:f64  0.0:f64                -1.1721513422464978:f64
        Grad3 -2.22474487139:f64      -1.0:f64                 2.22474487139:f64
        Grad3 -2.22474487139:f64       1.0:f64                 2.22474487139:f64
        Grad3 -3.0862664687972017:f64  0.0:f64                 1.1721513422464978:f64
        Grad3 -1.1721513422464978:f64  0.0:f64                 3.0862664687972017:f64
        Grad3 -2.22474487139:f64       2.22474487139:f64      -1.0:f64
        Grad3 -2.22474487139:f64       2.22474487139:f64       1.0:f64
        Grad3 -1.1721513422464978:f64  3.0862664687972017:f64  0.0:f64
        Grad3 -3.0862664687972017:f64  1.1721513422464978:f64  0.0:f64
        Grad3 -1.0:f64                -2.22474487139:f64      -2.22474487139:f64
        Grad3  1.0:f64                -2.22474487139:f64      -2.22474487139:f64
        Grad3  0.0:f64                -3.0862664687972017:f64 -1.1721513422464978:f64
        Grad3  0.0:f64                -1.1721513422464978:f64 -3.0862664687972017:f64
        Grad3 -1.0:f64                -2.22474487139:f64       2.22474487139:f64
        Grad3  1.0:f64                -2.22474487139:f64       2.22474487139:f64
        Grad3  0.0:f64                -1.1721513422464978:f64  3.0862664687972017:f64
        Grad3  0.0:f64                -3.0862664687972017:f64  1.1721513422464978:f64
        Grad3 -1.0:f64                 2.22474487139:f64      -2.22474487139:f64
        Grad3  1.0:f64                 2.22474487139:f64      -2.22474487139:f64
        Grad3  0.0:f64                 1.1721513422464978:f64 -3.0862664687972017:f64
        Grad3  0.0:f64                 3.0862664687972017:f64 -1.1721513422464978:f64
        Grad3 -1.0:f64                 2.22474487139:f64       2.22474487139:f64
        Grad3  1.0:f64                 2.22474487139:f64       2.22474487139:f64
        Grad3  0.0:f64                 3.0862664687972017:f64  1.1721513422464978:f64
        Grad3  0.0:f64                 1.1721513422464978:f64  3.0862664687972017:f64
        Grad3  2.22474487139:f64      -2.22474487139:f64      -1.0:f64
        Grad3  2.22474487139:f64      -2.22474487139:f64       1.0:f64
        Grad3  1.1721513422464978:f64 -3.0862664687972017:f64  0.0:f64
        Grad3  3.0862664687972017:f64 -1.1721513422464978:f64  0.0:f64
        Grad3  2.22474487139:f64      -1.0:f64                -2.22474487139:f64
        Grad3  2.22474487139:f64       1.0:f64                -2.22474487139:f64
        Grad3  3.0862664687972017:f64  0.0:f64                -1.1721513422464978:f64
        Grad3  1.1721513422464978:f64  0.0:f64                -3.0862664687972017:f64
        Grad3  2.22474487139:f64      -1.0:f64                 2.22474487139:f64
        Grad3  2.22474487139:f64       1.0:f64                 2.22474487139:f64
        Grad3  1.1721513422464978:f64  0.0:f64                 3.0862664687972017:f64
        Grad3  3.0862664687972017:f64  0.0:f64                 1.1721513422464978:f64
        Grad3  2.22474487139:f64       2.22474487139:f64      -1.0:f64
        Grad3  2.22474487139:f64       2.22474487139:f64       1.0:f64
        Grad3  3.0862664687972017:f64  1.1721513422464978:f64  0.0:f64
        Grad3  1.1721513422464978:f64  3.0862664687972017:f64  0.0:f64

for g in grad3
    g.dx /= N3
    g.dy /= N3
    g.dz /= N3

for i el in (enumerate GRADIENTS_3D)
    el = grad3 @ (i % (countof grad3))

local GRADIENTS_4D : (array Grad4 PSIZE)
local grad4 =
    arrayof Grad4
        Grad4 -0.753341017856078:f64    -0.37968289875261624:f64  -0.37968289875261624:f64  -0.37968289875261624:f64
        Grad4 -0.7821684431180708:f64   -0.4321472685365301:f64   -0.4321472685365301:f64    0.12128480194602098:f64
        Grad4 -0.7821684431180708:f64   -0.4321472685365301:f64    0.12128480194602098:f64  -0.4321472685365301:f64
        Grad4 -0.7821684431180708:f64    0.12128480194602098:f64  -0.4321472685365301:f64   -0.4321472685365301:f64
        Grad4 -0.8586508742123365:f64   -0.508629699630796:f64     0.044802370851755174:f64  0.044802370851755174:f64
        Grad4 -0.8586508742123365:f64    0.044802370851755174:f64 -0.508629699630796:f64     0.044802370851755174:f64
        Grad4 -0.8586508742123365:f64    0.044802370851755174:f64  0.044802370851755174:f64 -0.508629699630796:f64
        Grad4 -0.9982828964265062:f64   -0.03381941603233842:f64  -0.03381941603233842:f64  -0.03381941603233842:f64
        Grad4 -0.37968289875261624:f64  -0.753341017856078:f64    -0.37968289875261624:f64  -0.37968289875261624:f64
        Grad4 -0.4321472685365301:f64   -0.7821684431180708:f64   -0.4321472685365301:f64    0.12128480194602098:f64
        Grad4 -0.4321472685365301:f64   -0.7821684431180708:f64    0.12128480194602098:f64  -0.4321472685365301:f64
        Grad4  0.12128480194602098:f64  -0.7821684431180708:f64   -0.4321472685365301:f64   -0.4321472685365301:f64
        Grad4 -0.508629699630796:f64    -0.8586508742123365:f64    0.044802370851755174:f64  0.044802370851755174:f64
        Grad4  0.044802370851755174:f64 -0.8586508742123365:f64   -0.508629699630796:f64     0.044802370851755174:f64
        Grad4  0.044802370851755174:f64 -0.8586508742123365:f64    0.044802370851755174:f64 -0.508629699630796:f64
        Grad4 -0.03381941603233842:f64  -0.9982828964265062:f64   -0.03381941603233842:f64  -0.03381941603233842:f64
        Grad4 -0.37968289875261624:f64  -0.37968289875261624:f64  -0.753341017856078:f64    -0.37968289875261624:f64
        Grad4 -0.4321472685365301:f64   -0.4321472685365301:f64   -0.7821684431180708:f64    0.12128480194602098:f64
        Grad4 -0.4321472685365301:f64    0.12128480194602098:f64  -0.7821684431180708:f64   -0.4321472685365301:f64
        Grad4  0.12128480194602098:f64  -0.4321472685365301:f64   -0.7821684431180708:f64   -0.4321472685365301:f64
        Grad4 -0.508629699630796:f64     0.044802370851755174:f64 -0.8586508742123365:f64    0.044802370851755174:f64
        Grad4  0.044802370851755174:f64 -0.508629699630796:f64    -0.8586508742123365:f64    0.044802370851755174:f64
        Grad4  0.044802370851755174:f64  0.044802370851755174:f64 -0.8586508742123365:f64   -0.508629699630796:f64
        Grad4 -0.03381941603233842:f64  -0.03381941603233842:f64  -0.9982828964265062:f64   -0.03381941603233842:f64
        Grad4 -0.37968289875261624:f64  -0.37968289875261624:f64  -0.37968289875261624:f64  -0.753341017856078:f64
        Grad4 -0.4321472685365301:f64   -0.4321472685365301:f64    0.12128480194602098:f64  -0.7821684431180708:f64
        Grad4 -0.4321472685365301:f64    0.12128480194602098:f64  -0.4321472685365301:f64   -0.7821684431180708:f64
        Grad4  0.12128480194602098:f64  -0.4321472685365301:f64   -0.4321472685365301:f64   -0.7821684431180708:f64
        Grad4 -0.508629699630796:f64     0.044802370851755174:f64  0.044802370851755174:f64 -0.8586508742123365:f64
        Grad4  0.044802370851755174:f64 -0.508629699630796:f64     0.044802370851755174:f64 -0.8586508742123365:f64
        Grad4  0.044802370851755174:f64  0.044802370851755174:f64 -0.508629699630796:f64    -0.8586508742123365:f64
        Grad4 -0.03381941603233842:f64  -0.03381941603233842:f64  -0.03381941603233842:f64  -0.9982828964265062:f64
        Grad4 -0.6740059517812944:f64   -0.3239847771997537:f64   -0.3239847771997537:f64    0.5794684678643381:f64
        Grad4 -0.7504883828755602:f64   -0.4004672082940195:f64    0.15296486218853164:f64   0.5029860367700724:f64
        Grad4 -0.7504883828755602:f64    0.15296486218853164:f64  -0.4004672082940195:f64    0.5029860367700724:f64
        Grad4 -0.8828161875373585:f64    0.08164729285680945:f64   0.08164729285680945:f64   0.4553054119602712:f64
        Grad4 -0.4553054119602712:f64   -0.08164729285680945:f64  -0.08164729285680945:f64   0.8828161875373585:f64
        Grad4 -0.5029860367700724:f64   -0.15296486218853164:f64   0.4004672082940195:f64    0.7504883828755602:f64
        Grad4 -0.5029860367700724:f64    0.4004672082940195:f64   -0.15296486218853164:f64   0.7504883828755602:f64
        Grad4 -0.5794684678643381:f64    0.3239847771997537:f64    0.3239847771997537:f64    0.6740059517812944:f64
        Grad4 -0.3239847771997537:f64   -0.6740059517812944:f64   -0.3239847771997537:f64    0.5794684678643381:f64
        Grad4 -0.4004672082940195:f64   -0.7504883828755602:f64    0.15296486218853164:f64   0.5029860367700724:f64
        Grad4  0.15296486218853164:f64  -0.7504883828755602:f64   -0.4004672082940195:f64    0.5029860367700724:f64
        Grad4  0.08164729285680945:f64  -0.8828161875373585:f64    0.08164729285680945:f64   0.4553054119602712:f64
        Grad4 -0.08164729285680945:f64  -0.4553054119602712:f64   -0.08164729285680945:f64   0.8828161875373585:f64
        Grad4 -0.15296486218853164:f64  -0.5029860367700724:f64    0.4004672082940195:f64    0.7504883828755602:f64
        Grad4  0.4004672082940195:f64   -0.5029860367700724:f64   -0.15296486218853164:f64   0.7504883828755602:f64
        Grad4  0.3239847771997537:f64   -0.5794684678643381:f64    0.3239847771997537:f64    0.6740059517812944:f64
        Grad4 -0.3239847771997537:f64   -0.3239847771997537:f64   -0.6740059517812944:f64    0.5794684678643381:f64
        Grad4 -0.4004672082940195:f64    0.15296486218853164:f64  -0.7504883828755602:f64    0.5029860367700724:f64
        Grad4  0.15296486218853164:f64  -0.4004672082940195:f64   -0.7504883828755602:f64    0.5029860367700724:f64
        Grad4  0.08164729285680945:f64   0.08164729285680945:f64  -0.8828161875373585:f64    0.4553054119602712:f64
        Grad4 -0.08164729285680945:f64  -0.08164729285680945:f64  -0.4553054119602712:f64    0.8828161875373585:f64
        Grad4 -0.15296486218853164:f64   0.4004672082940195:f64   -0.5029860367700724:f64    0.7504883828755602:f64
        Grad4  0.4004672082940195:f64   -0.15296486218853164:f64  -0.5029860367700724:f64    0.7504883828755602:f64
        Grad4  0.3239847771997537:f64    0.3239847771997537:f64   -0.5794684678643381:f64    0.6740059517812944:f64
        Grad4 -0.6740059517812944:f64   -0.3239847771997537:f64    0.5794684678643381:f64   -0.3239847771997537:f64
        Grad4 -0.7504883828755602:f64   -0.4004672082940195:f64    0.5029860367700724:f64    0.15296486218853164:f64
        Grad4 -0.7504883828755602:f64    0.15296486218853164:f64   0.5029860367700724:f64   -0.4004672082940195:f64
        Grad4 -0.8828161875373585:f64    0.08164729285680945:f64   0.4553054119602712:f64    0.08164729285680945:f64
        Grad4 -0.4553054119602712:f64   -0.08164729285680945:f64   0.8828161875373585:f64   -0.08164729285680945:f64
        Grad4 -0.5029860367700724:f64   -0.15296486218853164:f64   0.7504883828755602:f64    0.4004672082940195:f64
        Grad4 -0.5029860367700724:f64    0.4004672082940195:f64    0.7504883828755602:f64   -0.15296486218853164:f64
        Grad4 -0.5794684678643381:f64    0.3239847771997537:f64    0.6740059517812944:f64    0.3239847771997537:f64
        Grad4 -0.3239847771997537:f64   -0.6740059517812944:f64    0.5794684678643381:f64   -0.3239847771997537:f64
        Grad4 -0.4004672082940195:f64   -0.7504883828755602:f64    0.5029860367700724:f64    0.15296486218853164:f64
        Grad4  0.15296486218853164:f64  -0.7504883828755602:f64    0.5029860367700724:f64   -0.4004672082940195:f64
        Grad4  0.08164729285680945:f64  -0.8828161875373585:f64    0.4553054119602712:f64    0.08164729285680945:f64
        Grad4 -0.08164729285680945:f64  -0.4553054119602712:f64    0.8828161875373585:f64   -0.08164729285680945:f64
        Grad4 -0.15296486218853164:f64  -0.5029860367700724:f64    0.7504883828755602:f64    0.4004672082940195:f64
        Grad4  0.4004672082940195:f64   -0.5029860367700724:f64    0.7504883828755602:f64   -0.15296486218853164:f64
        Grad4  0.3239847771997537:f64   -0.5794684678643381:f64    0.6740059517812944:f64    0.3239847771997537:f64
        Grad4 -0.3239847771997537:f64   -0.3239847771997537:f64    0.5794684678643381:f64   -0.6740059517812944:f64
        Grad4 -0.4004672082940195:f64    0.15296486218853164:f64   0.5029860367700724:f64   -0.7504883828755602:f64
        Grad4  0.15296486218853164:f64  -0.4004672082940195:f64    0.5029860367700724:f64   -0.7504883828755602:f64
        Grad4  0.08164729285680945:f64   0.08164729285680945:f64   0.4553054119602712:f64   -0.8828161875373585:f64
        Grad4 -0.08164729285680945:f64  -0.08164729285680945:f64   0.8828161875373585:f64   -0.4553054119602712:f64
        Grad4 -0.15296486218853164:f64   0.4004672082940195:f64    0.7504883828755602:f64   -0.5029860367700724:f64
        Grad4  0.4004672082940195:f64   -0.15296486218853164:f64   0.7504883828755602:f64   -0.5029860367700724:f64
        Grad4  0.3239847771997537:f64    0.3239847771997537:f64    0.6740059517812944:f64   -0.5794684678643381:f64
        Grad4 -0.6740059517812944:f64    0.5794684678643381:f64   -0.3239847771997537:f64   -0.3239847771997537:f64
        Grad4 -0.7504883828755602:f64    0.5029860367700724:f64   -0.4004672082940195:f64    0.15296486218853164:f64
        Grad4 -0.7504883828755602:f64    0.5029860367700724:f64    0.15296486218853164:f64  -0.4004672082940195:f64
        Grad4 -0.8828161875373585:f64    0.4553054119602712:f64    0.08164729285680945:f64   0.08164729285680945:f64
        Grad4 -0.4553054119602712:f64    0.8828161875373585:f64   -0.08164729285680945:f64  -0.08164729285680945:f64
        Grad4 -0.5029860367700724:f64    0.7504883828755602:f64   -0.15296486218853164:f64   0.4004672082940195:f64
        Grad4 -0.5029860367700724:f64    0.7504883828755602:f64    0.4004672082940195:f64   -0.15296486218853164:f64
        Grad4 -0.5794684678643381:f64    0.6740059517812944:f64    0.3239847771997537:f64    0.3239847771997537:f64
        Grad4 -0.3239847771997537:f64    0.5794684678643381:f64   -0.6740059517812944:f64   -0.3239847771997537:f64
        Grad4 -0.4004672082940195:f64    0.5029860367700724:f64   -0.7504883828755602:f64    0.15296486218853164:f64
        Grad4  0.15296486218853164:f64   0.5029860367700724:f64   -0.7504883828755602:f64   -0.4004672082940195:f64
        Grad4  0.08164729285680945:f64   0.4553054119602712:f64   -0.8828161875373585:f64    0.08164729285680945:f64
        Grad4 -0.08164729285680945:f64   0.8828161875373585:f64   -0.4553054119602712:f64   -0.08164729285680945:f64
        Grad4 -0.15296486218853164:f64   0.7504883828755602:f64   -0.5029860367700724:f64    0.4004672082940195:f64
        Grad4  0.4004672082940195:f64    0.7504883828755602:f64   -0.5029860367700724:f64   -0.15296486218853164:f64
        Grad4  0.3239847771997537:f64    0.6740059517812944:f64   -0.5794684678643381:f64    0.3239847771997537:f64
        Grad4 -0.3239847771997537:f64    0.5794684678643381:f64   -0.3239847771997537:f64   -0.6740059517812944:f64
        Grad4 -0.4004672082940195:f64    0.5029860367700724:f64    0.15296486218853164:f64  -0.7504883828755602:f64
        Grad4  0.15296486218853164:f64   0.5029860367700724:f64   -0.4004672082940195:f64   -0.7504883828755602:f64
        Grad4  0.08164729285680945:f64   0.4553054119602712:f64    0.08164729285680945:f64  -0.8828161875373585:f64
        Grad4 -0.08164729285680945:f64   0.8828161875373585:f64   -0.08164729285680945:f64  -0.4553054119602712:f64
        Grad4 -0.15296486218853164:f64   0.7504883828755602:f64    0.4004672082940195:f64   -0.5029860367700724:f64
        Grad4  0.4004672082940195:f64    0.7504883828755602:f64   -0.15296486218853164:f64  -0.5029860367700724:f64
        Grad4  0.3239847771997537:f64    0.6740059517812944:f64    0.3239847771997537:f64   -0.5794684678643381:f64
        Grad4  0.5794684678643381:f64   -0.6740059517812944:f64   -0.3239847771997537:f64   -0.3239847771997537:f64
        Grad4  0.5029860367700724:f64   -0.7504883828755602:f64   -0.4004672082940195:f64    0.15296486218853164:f64
        Grad4  0.5029860367700724:f64   -0.7504883828755602:f64    0.15296486218853164:f64  -0.4004672082940195:f64
        Grad4  0.4553054119602712:f64   -0.8828161875373585:f64    0.08164729285680945:f64   0.08164729285680945:f64
        Grad4  0.8828161875373585:f64   -0.4553054119602712:f64   -0.08164729285680945:f64  -0.08164729285680945:f64
        Grad4  0.7504883828755602:f64   -0.5029860367700724:f64   -0.15296486218853164:f64   0.4004672082940195:f64
        Grad4  0.7504883828755602:f64   -0.5029860367700724:f64    0.4004672082940195:f64   -0.15296486218853164:f64
        Grad4  0.6740059517812944:f64   -0.5794684678643381:f64    0.3239847771997537:f64    0.3239847771997537:f64
        Grad4  0.5794684678643381:f64   -0.3239847771997537:f64   -0.6740059517812944:f64   -0.3239847771997537:f64
        Grad4  0.5029860367700724:f64   -0.4004672082940195:f64   -0.7504883828755602:f64    0.15296486218853164:f64
        Grad4  0.5029860367700724:f64    0.15296486218853164:f64  -0.7504883828755602:f64   -0.4004672082940195:f64
        Grad4  0.4553054119602712:f64    0.08164729285680945:f64  -0.8828161875373585:f64    0.08164729285680945:f64
        Grad4  0.8828161875373585:f64   -0.08164729285680945:f64  -0.4553054119602712:f64   -0.08164729285680945:f64
        Grad4  0.7504883828755602:f64   -0.15296486218853164:f64  -0.5029860367700724:f64    0.4004672082940195:f64
        Grad4  0.7504883828755602:f64    0.4004672082940195:f64   -0.5029860367700724:f64   -0.15296486218853164:f64
        Grad4  0.6740059517812944:f64    0.3239847771997537:f64   -0.5794684678643381:f64    0.3239847771997537:f64
        Grad4  0.5794684678643381:f64   -0.3239847771997537:f64   -0.3239847771997537:f64   -0.6740059517812944:f64
        Grad4  0.5029860367700724:f64   -0.4004672082940195:f64    0.15296486218853164:f64  -0.7504883828755602:f64
        Grad4  0.5029860367700724:f64    0.15296486218853164:f64  -0.4004672082940195:f64   -0.7504883828755602:f64
        Grad4  0.4553054119602712:f64    0.08164729285680945:f64   0.08164729285680945:f64  -0.8828161875373585:f64
        Grad4  0.8828161875373585:f64   -0.08164729285680945:f64  -0.08164729285680945:f64  -0.4553054119602712:f64
        Grad4  0.7504883828755602:f64   -0.15296486218853164:f64   0.4004672082940195:f64   -0.5029860367700724:f64
        Grad4  0.7504883828755602:f64    0.4004672082940195:f64   -0.15296486218853164:f64  -0.5029860367700724:f64
        Grad4  0.6740059517812944:f64    0.3239847771997537:f64    0.3239847771997537:f64   -0.5794684678643381:f64
        Grad4  0.03381941603233842:f64   0.03381941603233842:f64   0.03381941603233842:f64   0.9982828964265062:f64
        Grad4 -0.044802370851755174:f64 -0.044802370851755174:f64  0.508629699630796:f64     0.8586508742123365:f64
        Grad4 -0.044802370851755174:f64  0.508629699630796:f64    -0.044802370851755174:f64  0.8586508742123365:f64
        Grad4 -0.12128480194602098:f64   0.4321472685365301:f64    0.4321472685365301:f64    0.7821684431180708:f64
        Grad4  0.508629699630796:f64    -0.044802370851755174:f64 -0.044802370851755174:f64  0.8586508742123365:f64
        Grad4  0.4321472685365301:f64   -0.12128480194602098:f64   0.4321472685365301:f64    0.7821684431180708:f64
        Grad4  0.4321472685365301:f64    0.4321472685365301:f64   -0.12128480194602098:f64   0.7821684431180708:f64
        Grad4  0.37968289875261624:f64   0.37968289875261624:f64   0.37968289875261624:f64   0.753341017856078:f64
        Grad4  0.03381941603233842:f64   0.03381941603233842:f64   0.9982828964265062:f64    0.03381941603233842:f64
        Grad4 -0.044802370851755174:f64  0.044802370851755174:f64  0.8586508742123365:f64    0.508629699630796:f64
        Grad4 -0.044802370851755174:f64  0.508629699630796:f64     0.8586508742123365:f64   -0.044802370851755174:f64
        Grad4 -0.12128480194602098:f64   0.4321472685365301:f64    0.7821684431180708:f64    0.4321472685365301:f64
        Grad4  0.508629699630796:f64    -0.044802370851755174:f64  0.8586508742123365:f64   -0.044802370851755174:f64
        Grad4  0.4321472685365301:f64   -0.12128480194602098:f64   0.7821684431180708:f64    0.4321472685365301:f64
        Grad4  0.4321472685365301:f64    0.4321472685365301:f64    0.7821684431180708:f64   -0.12128480194602098:f64
        Grad4  0.37968289875261624:f64   0.37968289875261624:f64   0.753341017856078:f64     0.37968289875261624:f64
        Grad4  0.03381941603233842:f64   0.9982828964265062:f64    0.03381941603233842:f64   0.03381941603233842:f64
        Grad4 -0.044802370851755174:f64  0.8586508742123365:f64   -0.044802370851755174:f64  0.508629699630796:f64
        Grad4 -0.044802370851755174:f64  0.8586508742123365:f64    0.508629699630796:f64    -0.044802370851755174:f64
        Grad4 -0.12128480194602098:f64   0.7821684431180708:f64    0.4321472685365301:f64    0.4321472685365301:f64
        Grad4  0.508629699630796:f64     0.8586508742123365:f64   -0.044802370851755174:f64 -0.044802370851755174:f64
        Grad4  0.4321472685365301:f64    0.7821684431180708:f64   -0.12128480194602098:f64   0.4321472685365301:f64
        Grad4  0.4321472685365301:f64    0.7821684431180708:f64    0.4321472685365301:f64   -0.12128480194602098:f64
        Grad4  0.37968289875261624:f64   0.753341017856078:f64     0.37968289875261624:f64   0.37968289875261624:f64
        Grad4  0.9982828964265062:f64    0.03381941603233842:f64   0.03381941603233842:f64   0.03381941603233842:f64
        Grad4  0.8586508742123365:f64   -0.044802370851755174:f64 -0.044802370851755174:f64  0.508629699630796:f64
        Grad4  0.8586508742123365:f64   -0.044802370851755174:f64  0.508629699630796:f64    -0.044802370851755174:f64
        Grad4  0.7821684431180708:f64   -0.12128480194602098:f64   0.4321472685365301:f64    0.4321472685365301:f64
        Grad4  0.8586508742123365:f64    0.508629699630796:f64    -0.044802370851755174:f64 -0.044802370851755174:f64
        Grad4  0.7821684431180708:f64    0.4321472685365301:f64   -0.12128480194602098:f64   0.4321472685365301:f64
        Grad4  0.7821684431180708:f64    0.4321472685365301:f64    0.4321472685365301:f64   -0.12128480194602098:f64
        Grad4  0.753341017856078:f64     0.37968289875261624:f64   0.37968289875261624:f64   0.37968289875261624:f64

for g in grad4
    g.dx /= N4
    g.dy /= N4
    g.dz /= N4
    g.dw /= N4

for i el in (enumerate GRADIENTS_4D)
    el = grad4 @ (i % (countof grad4))

run-stage;

global LOOKUP_2D = LOOKUP_2D
global LOOKUP_3D = LOOKUP_3D
global LOOKUP_4D : (@ LatticePoint4D) = 
    inline ()
        LOOKUP_4D_STORAGE as rawstring as (@ LatticePoint4D)

global GRADIENTS_2D = GRADIENTS_2D
global GRADIENTS_3D = GRADIENTS_3D
global GRADIENTS_4D = GRADIENTS_4D

fn noise2-base (gen xs ys)
    """"2D SuperSimplex noise base.
        Lookup table implementation inspired by DigitalShadow.
    local value : f64

    # Get base points and offsets
    let xsb ysb = (floor xs) (floor ys)
    xsi := xs - xsb
    ysi := ys - ysb

    # Index to point list
    a := (xsi + ysi) as i32
    let index =
        |
            a << 2
            ((xsi - ysi / 2 + 1 - a / 2) as i32) << 3
            ((ysi - xsi / 2 + 1 - a / 2) as i32) << 4

    ssi := (xsi + ysi) * -0.211324865405187:f64
    xi := xsi + ssi
    yi := ysi + ssi

    # Point contributions
    for i in (range 4)
        c := LOOKUP_2D @ (index + i)

        dx := xi + c.dx
        dy := yi + c.dy
        attn := 2:f64 / 3:f64 - dx * dx - dy * dy
        if (attn <= 0)
            continue;
        
        pxm := ((xsb as i32) + c.xsv) & PMASK
        pym := ((ysb as i32) + c.ysv) & PMASK
        grad := gen._perm-grad2 @ ((gen._perm @ (pxm as usize)) ^ pym)
        extrapolation := grad.dx * dx + grad.dy * dy

        attn := attn * attn
        value += attn * attn * extrapolation
    value

fn noise3-BCC (gen xr yr zr)
    """"Generate overlapping cubic lattices for 3D Re-oriented BCC noise.
        Lookup table implementation inspired by DigitalShadow.
        It was actually faster to narrow down the points in the loop itself,
        than to build up the index with enough info to isolate 8 points.
    # Get base and offsets inside cube of first lattice.
    floori := (x) -> ((floor x) as i32)
    let xrb yrb zrb = (floori xr) (floori yr) (floori zr)
    xri := xr - (xrb as f64)
    yri := yr - (yrb as f64)
    zri := zr - (zrb as f64)

    # Identify which octant of the cube we're in. This determines which cell
     in the other cubic lattice we're in, and also narrows down one point on each.
    xht := (xri + 0.5) as i32
    yht := (yri + 0.5) as i32 
    zht := (zri + 0.5) as i32
    index := (xht << 0) | (yht << 1) | (zht << 2)

    # Point contributions
    local value : f64

    local next = 0:usize
    while (next != -1:usize)
        c := (LOOKUP_3D @ index @ next)
        dxr := xri + c.dxr
        dyr := yri + c.dyr
        dzr := zri + c.dzr
        attn := 0.75 - dxr * dxr - dyr * dyr - dzr * dzr
        if (attn < 0)
            next = c.next-on-failure
        else
            pxm := (xrb + c.xrv) & PMASK
            pym := (yrb + c.yrv) & PMASK
            pzm := (zrb + c.zrv) & PMASK

            let perm perm-grad3 = gen._perm gen._perm-grad3
            grad := perm-grad3 @ ((perm @ ((perm @ pxm) ^ pym)) ^ pzm)
            extrapolation := grad.dx * dxr + grad.dy * dyr + grad.dz * dzr

            attn := attn * attn
            value += attn * attn * extrapolation
            next = c.next-on-success
    value

fn noise4-base (gen xs ys zs ws)
    """"4D SuperSimplex noise base.
        Using ultra-simple 4x4x4x4 lookup partitioning.
        This isn't as elegant or SIMD/GPU/etc. portable as other approaches,
        but it does compete performance-wise with optimized OpenSimplex1.
    local value : f64

    # Get base points and offsets
    floori := (x) -> ((floor x) as i32)
    let xsb ysb zsb wsb = (floori xs) (floori ys) (floori zs) (floori ws)  
    xsi := xs - (xsb as f64)
    ysi := ys - (ysb as f64)
    zsi := zs - (zsb as f64)
    wsi := ws - (wsb as f64)

    # Unskewed offsets
    ssi := (+ xsi ysi zsi wsi) * -0.138196601125011:f64
    xi := xsi + ssi
    yi := ysi + ssi
    zi := zsi + ssi
    wi := wsi + ssi

    let index =
        |
            ((floori (xs * 4)) & 3) << 0
            ((floori (ys * 4)) & 3) << 2
            ((floori (zs * 4)) & 3) << 4
            ((floori (ws * 4)) & 3) << 6

    # Point contributions
    trange := LOOKUP_4D_RANGES @ index
    let start end = trange.start (trange.start + trange.len)
    for idx in (range start end)
        c := LOOKUP_4D @ idx

        dx := xi + c.dx
        dy := yi + c.dy
        dz := zi + c.dz
        dw := wi + c.dw
        attn := 0.8 - dx * dx - dy * dy - dz * dz - dw * dw
        
        if (attn > 0)
            attn := attn * attn

            pxm := (xsb + c.xsv) & PMASK
            pym := (ysb + c.ysv) & PMASK
            pzm := (zsb + c.zsv) & PMASK
            pwm := (wsb + c.wsv) & PMASK

            let perm perm-grad4 = gen._perm gen._perm-grad4

            grad := perm-grad4 @ ((perm @ ((perm @ ((perm @ pxm) ^ pym)) ^ pzm)) ^ pwm)
            extrapolation := grad.dx * dx + grad.dy * dy + grad.dz * dz + grad.dw * dw

            value += attn * attn * extrapolation

    value

struct OpenSimplex2S
    """"K.jpg's OpenSimplex 2, smooth variant ("SuperSimplex")
        
        - 2D is standard simplex, modified to support larger kernels.
          Implemented using a lookup table.
        - 3D is "Re-oriented 8-point BCC noise" which constructs a
          congruent BCC lattice in a much different way than usual.
        - 4D uses a naïve pregenerated lookup table, and averages out
          to the expected performance.
        
        Multiple versions of each function are provided. See the
        docstrings for each, for more info.
        
    _perm : (Array i16 PSIZE)
    _perm-grad2 : (Array Grad2 PSIZE)
    _perm-grad3 : (Array Grad3 PSIZE)
    _perm-grad4 : (Array Grad4 PSIZE)

    inline __typecall (cls seed)
        seed as:= i64

        local self =
            super-type.__typecall cls

        'resize self._perm PSIZE
        'resize self._perm-grad2 PSIZE
        'resize self._perm-grad3 PSIZE
        'resize self._perm-grad4 PSIZE

        local source : (Array i16 PSIZE)
        'resize source PSIZE

        for i in (range PSIZE)
            source @ i = (i as i16)

        local seed = seed
        for i in (rrange PSIZE)
            seed = seed * 6364136223846793005:i64 + 1442695040888963407:i64
            r := ((seed + 31) % (i + 1)) as i32
            let r1 = (copy r)
            let r =
                ? (r < 0) (r + i + 1) r
            let r2 = (copy r)

            let perm = self._perm
            perm @ i = (source @ r)
            self._perm-grad2 @ i = (GRADIENTS_2D @ (perm @ i))
            self._perm-grad3 @ i = (GRADIENTS_3D @ (perm @ i))
            self._perm-grad4 @ i = (GRADIENTS_4D @ (perm @ i))
            source @ r = (source @ i)
        self

    fn noise2 (self x y)
        """"2D SuperSimplex noise, standard lattice orientation.
        imply x f64
        imply y f64
        # Get points for A2* lattice
        s := 0.366025403784439:f64 * (x + y)
        xs := x + s 
        ys := y + s

        noise2-base self xs ys

    fn noise2-XbeforeY (self x y)
        """"2D SuperSimplex noise, with Y pointing down the main diagonal.
            Might be better for a 2D sandbox style game, where Y is vertical.
            Probably slightly less optimal for heightmaps or continent maps.
        imply x f64
        imply y f64
        # Skew transform and rotation baked into one.
        xx := x * 0.7071067811865476:f64
        yy := y * 1.224744871380249:f64

        noise2-base self (yy + xx) (yy - xx)

    fn noise3-classic (self x y z)
        """"3D Re-oriented 8-point BCC noise, classic orientation
            Proper substitute for what 3D SuperSimplex "should" be,
            in light of Forbidden Formulae.
            Use noise3_XYBeforeZ or noise3_XZBeforeY instead, wherever appropriate.
            
        imply x f64
        imply y f64
        imply z f64

        # Re-orient the cubic lattices via rotation, to produce the expected look on cardinal planar slices.
          If texturing objects that don't tend to have cardinal plane faces, you could even remove this.
          Orthonormal rotation. Not a skew transform.
        r := (2.0 / 3.0) * (x + y + z)
        xr := r - x
        yr := r - y
        zr := r - z
        
        # Evaluate both lattices to form a BCC lattice.
        noise3-BCC self xr yr zr

    fn noise3-XYbeforeZ (self x y z)
        """"3D Re-oriented 8-point BCC noise, with better visual isotropy in (X, Y).
            Recommended for 3D terrain and time-varied animations.
            The Z coordinate should always be the "different" coordinate in your use case.
            If Y is vertical in world coordinates, call noise3_XYBeforeZ(x, z, Y) or use noise3_XZBeforeY.
            If Z is vertical in world coordinates, call noise3_XYBeforeZ(x, y, Z).
            For a time varied animation, call noise3_XYBeforeZ(x, y, T).
        imply x f64
        imply y f64
        imply z f64

        # Re-orient the cubic lattices without skewing, to make X and Y triangular like 2D.
          Orthonormal rotation. Not a skew transform.
        xy := x + y
        s2 := xy * -0.211324865405187:f64
        zz := z * 0.577350269189626:f64
        xr := x + s2 - zz
        yr := y + s2 - zz
        zr := xy * 0.577350269189626:f64 + zz

        # Evaluate both lattices to form a BCC lattice.
        noise3-BCC self xr yr zr

    fn noise3-XZbeforeY (self x y z)
        """"3D Re-oriented 8-point BCC noise, with better visual isotropy in (X, Z).
            Recommended for 3D terrain and time-varied animations.
            The Y coordinate should always be the "different" coordinate in your use case.
            If Y is vertical in world coordinates, call noise3_XZBeforeY(x, Y, z) or use noise3_XYBeforeZ.
            If Z is vertical in world coordinates, call noise3_XZBeforeY(x, Z, Y).
            For a time varied animation, call noise3_XYBeforeZ(x, y, T).
        imply x f64
        imply y f64
        imply z f64

        # Re-orient the cubic lattices without skewing, to make X and Y triangular like 2D.
          Orthonormal rotation. Not a skew transform.
        xz := x + z;
        s2 := xz * -0.211324865405187:f64
        yy := y * 0.577350269189626:f64
        xr := x + s2 - yy 
        zr := z + s2 - yy
        yr := xz * 0.577350269189626:f64 + yy

        # Evaluate both lattices to form a BCC lattice.
        noise3-BCC self xr yr zr

    fn noise4-classic (self x y z w)
        """"4D SuperSimplex noise, classic lattice orientation.
        imply x f64
        imply y f64
        imply z f64
        imply w f64

        # Get points for A4 lattice

        s := 0.309016994374947:f64 * (x + y + z + w)
        xs := x + s
        ys := y + s
        zs := z + s
        ws := w + s

        noise4-base self xs ys zs ws

    fn noise4-XYbeforeZW (self x y z w)
        """"4D SuperSimplex noise, with XY and ZW forming orthogonal triangular-based planes.
            Recommended for 3D terrain, where X and Y (or Z and W) are horizontal.
            Recommended for noise(x, y, sin(time), cos(time)) trick.

        s2 := (x + y) * -0.28522513987434876941:f64 + (z + w) * 0.83897065470611435718:f64
        t2 := (z + w) * 0.21939749883706435719:f64 + (x + y) * -0.48214856493302476942:f64
        xs := x + s2
        ys := y + s2
        zs := z + t2
        ws := w + t2

        noise4-base self xs ys zs ws

    fn noise4-XZbeforeYW (self x y z w)
        """"4D SuperSimplex noise, with XZ and YW forming orthogonal triangular-based planes.
            Recommended for 3D terrain, where X and Z (or Y and W) are horizontal.

        s2 := (x + z) * -0.28522513987434876941:f64 + (y + w) * 0.83897065470611435718:f64
        t2 := (y + w) * 0.21939749883706435719:f64 + (x + z) * -0.48214856493302476942:f64
        xs := x + s2
        ys := y + t2
        zs := z + s2
        ws := w + t2

        noise4-base self xs ys zs ws

    fn noise4-XYZbeforeW (self x y z w)
        """"4D SuperSimplex noise, with XYZ oriented like noise3_Classic,
            and W for an extra degree of freedom.
            Recommended for time-varied animations which texture a 3D object (W=time)

        xyz := x + y + z
        ww := w * 1.118033988749894:f64
        s2 := xyz * -0.16666666666666666:f64 + ww
        xs := x + s2
        ys := y + s2
        zs := z + s2
        ws := -0.5 * xyz + ww

        noise4-base self xs ys zs ws

do
    let OpenSimplex2S
    locals;
